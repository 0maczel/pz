/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pz.pzsensor.main;

import pz.pzsensor.config.Config;
import http.rest.RestClientException;
import java.awt.event.KeyEvent;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import pz.pzsensor.metrics.MetricFactory;
import pz.pzsensor.metrics.MetricNotSupportedError;
import pz.pzsensor.model.Metric;
import pz.pzsensor.model.Resource;
import pz.pzsensor.model.Sensor;
import pz.pzsensor.network.RESTRequester;
import pz.pzsensor.main.Gatherer;
/**
 *
 * @author misiek
 */
public class Main extends javax.swing.JFrame {

    private static boolean test = true;
    /**
     * Creates new form SensorFrame
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        Linterval = new javax.swing.JLabel();
        TFinterval = new javax.swing.JTextField();
        LhostName = new javax.swing.JLabel();
        TFhostName = new javax.swing.JTextField();
        LmonitorURL = new javax.swing.JLabel();
        TFmonitorURL = new javax.swing.JTextField();
        Bstart = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        title.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("SENSOR");

        Linterval.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Linterval.setText("Interval:");

        TFinterval.setText("10");
        TFinterval.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TFintervalKeyTyped(evt);
            }
        });

        LhostName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        LhostName.setText("Host name:");

        LmonitorURL.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        LmonitorURL.setText("Monitor URL:");

        Bstart.setText("Start Sensor");
        Bstart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BstartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(LmonitorURL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Linterval, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LhostName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TFinterval, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(TFhostName, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(TFmonitorURL, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(Bstart, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title)
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TFinterval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Linterval))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TFhostName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LhostName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TFmonitorURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LmonitorURL))
                .addGap(18, 18, 18)
                .addComponent(Bstart, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BstartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BstartActionPerformed
        // TODO add your handling code here:
        String interval = TFinterval.getText().toString();
        String hostName = TFhostName.getText().toString();
        String monitorURL = TFmonitorURL.getText().toString();
        if (TFinterval.getText().isEmpty() || TFinterval.getText().equals("") )
            interval = "5";
        if (TFmonitorURL.getText().isEmpty())
            return;
        try {
                //otwieramy plik do zapisu
                FileWriter outfile = new FileWriter("config.txt");
                outfile.write(
                        "{\n" +
                        "    \"interval\": \""+interval+"\",\n" +
                        "    \"hostName\": \""+hostName+"\",\n" +
                        "    \"monitorURL\": \""+monitorURL+"\",\n" +
                        "    \"metrics\": [\n" +
                        "        {\"metricName\": \"CPU\"}, \n" +
                        "        {\"metricName\": \"MEM\"}\n" +
                        "    ]\n" +
                        "}");
                //zamykamy plik do zapisu
                outfile.close();
            } catch (IOException e) {
                System.out.println("Configure file isn't create.");
            }
        test = false;
        setVisible(false);
        dispose(); 
    }//GEN-LAST:event_BstartActionPerformed

    private void TFintervalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TFintervalKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || c==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_TFintervalKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the form */
        String configFile = args[0];
        Config cfg = new Config();
        cfg.read(configFile);
        
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Main m = new Main();
                m.setVisible(true);
                m.TFinterval.setText(""+cfg.getInterval());
                m.TFhostName.setText(cfg.getSystemName());
                m.TFmonitorURL.setText(cfg.getMonitorURL());
            }
        });
        
        //System.out.println("Create sensor parameters.");
        while(test){
            System.out.print("");
            //continue;
        }
        System.out.println("Config file is done. Start sensor...");
        
        for(String arg : args){
            System.out.println(arg);
        }
        // read config from file
        //String configFile = args[0];
        //Config cfg = new Config();
        cfg.read(configFile);
        
//        System.out.println(cfg.getInterval());
//        System.out.println(cfg.getMonitorURL());
//        for(String metric: cfg.getMetrics()){
//            System.out.println(metric);
//        }
        RESTRequester restRequester = new RESTRequester(cfg.getMonitorURL());
        List<Metric> usedMetrics = new ArrayList<Metric>();
        for(String metric: cfg.getMetrics()){
            Metric m = restRequester.getMetric(metric);
            if(m == null){
                m = restRequester.createMetric(metric);
            }
            usedMetrics.add(m);
        }
        
        Resource resource = restRequester.getResource(cfg.getSystemName());
        if(resource == null){
            resource = restRequester.createResource(cfg.getSystemName());
        }
        
        List<Sensor> sensors = new ArrayList<Sensor>();
        for(Metric m: usedMetrics){
            Sensor s = restRequester.getSensor(resource.name, m.name);
            if(s == null){
                s = restRequester.createSensor(resource, m);
            }
            System.out.println(s.id);
            s.metricObj = m;
            sensors.add(s);
        }
        
        
        List<Gatherer> gatherers = new ArrayList<Gatherer>();
        MetricFactory mf = new MetricFactory();
        for(Sensor s: sensors){
            Gatherer g = new Gatherer();
            g.setSensor(s);
            try {
                g.setMetricIface(mf.createMetric(s.metricObj.name));
                g.setRest(restRequester);
            } catch (MetricNotSupportedError ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
            gatherers.add(g);
        }

        while(true){
            for(Gatherer g: gatherers){
                g.gather();
            }
            try {
                Thread.sleep(cfg.getInterval()*1000);
            } catch (InterruptedException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Bstart;
    private javax.swing.JLabel LhostName;
    private javax.swing.JLabel Linterval;
    private javax.swing.JLabel LmonitorURL;
    private javax.swing.JTextField TFhostName;
    private javax.swing.JTextField TFinterval;
    private javax.swing.JTextField TFmonitorURL;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
